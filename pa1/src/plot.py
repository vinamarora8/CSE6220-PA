import matplotlib.pyplot as plt
import numpy as np

inp = """
1, 3.141592653590, 0.001533746719
2, 3.141592653590, 0.000775098801
3, 3.141592653590, 0.000523567200
4, 3.141592653590, 0.000402450562
5, 3.141592653590, 0.000336885452
6, 3.141592653590, 0.000280857086
7, 3.141592653590, 0.013200759888
8, 3.141592653590, 0.024163722992
9, 3.141592653590, 0.013139486313
10, 3.141592653590, 0.013112545013
11, 3.141592653590, 0.013109445572
12, 3.141592653590, 0.018105030060
13, 3.141592653590, 0.018089056015
14, 3.141592653590, 0.018073320389
15, 3.141592653590, 0.018086433411
16, 3.141592653590, 0.042066335678
17, 3.141592653590, 0.033063411713
18, 3.141592653590, 0.033066511154
19, 3.141592653590, 0.044046401978
20, 3.141592653590, 0.044052600861
21, 3.141592653590, 0.055030822754
22, 3.141592653590, 0.065939664841
23, 3.141592653590, 0.058926582336
24, 3.141592653590, 0.064933776855
"""

inp = """
1, 3.141592653590, 0.149915456772
2, 3.141592653590, 0.075019836426
3, 3.141592653590, 0.050019502640
4, 3.141592653590, 0.037521123886
5, 3.141592653590, 0.030022382736
6, 3.141592653590, 0.025035858154
7, 3.141592653590, 0.047428369522
8, 3.141592653590, 0.044711112976
9, 3.141592653590, 0.042649507523
10, 3.141592653590, 0.042964458466
11, 3.141592653590, 0.039611816406
12, 3.141592653590, 0.048479080200
13, 3.141592653590, 0.047520160675
14, 3.141592653590, 0.046693563461
15, 3.141592653590, 0.045985698700
16, 3.141592653590, 0.053346395493
17, 3.141592653590, 0.057801723480
18, 3.141592653590, 0.048960685730
19, 3.141592653590, 0.059862852097
20, 3.141592653590, 0.058473348618
21, 3.141592653590, 0.069110393524
22, 3.048586152834, 0.076948881149
23, 3.057035554490, 0.077958106995
24, 3.072490159258, 0.070934295654
"""

inp = """
1, 3.141592653590, 0.001525402069
2, 3.141592653590, 0.000773191452
3, 3.141592653590, 0.000522613525
4, 3.141592653590, 0.000394105911
5, 3.141592653590, 0.000326633453
6, 3.141592653590, 0.000279188156
7, 3.141592653590, 0.000248193741
8, 3.141592653590, 0.000222444534
9, 3.141592653590, 0.000200271606
10, 3.141592653590, 0.000173091888
11, 3.141592653590, 0.000158548355
12, 3.141592653590, 0.000180006027
13, 3.141592653590, 0.000151395798
14, 3.141592653590, 0.000132560730
15, 3.141592653590, 0.000128984451
16, 3.141592653590, 0.000153779984
17, 3.141592653590, 0.000133752823
18, 3.141592653590, 0.000131845474
19, 3.141592653590, 0.000144243240
20, 3.141592653590, 0.000105381012
21, 3.141592653590, 0.000128984451
22, 3.141592653590, 0.000123977661
23, 3.141592653590, 0.000103473663
24, 3.141592653590, 0.000108718872
25, 3.141592653590, 0.000103950500
26, 3.141592653590, 0.000114917755
27, 3.141592653590, 0.000113248825
28, 3.141592653590, 0.000103473663
29, 3.141592653590, 0.000095129013
30, 3.141592653590, 0.000107526779
31, 3.141592653590, 0.000096797943
32, 3.141592653590, 0.000097036362
33, 3.141592653590, 0.000126838684
34, 3.141592653590, 0.000137329102
35, 3.141592653590, 0.000093221664
36, 3.141592653590, 0.000101566315
37, 3.141592653590, 0.000101804733
38, 3.141592653590, 0.000105142593
39, 3.141592653590, 0.000116586685
40, 3.141592653590, 0.000122785568
41, 3.141592653590, 0.000115871429
42, 3.141592653590, 0.000130176544
43, 3.141592653590, 0.000122070312
44, 3.141592653590, 0.000098943710
45, 3.141592653590, 0.000105619431
46, 3.141592653590, 0.000124216080
47, 3.141592653590, 0.000114917755
48, 3.141592653590, 0.000118255615
49, 3.141592653590, 0.000091552734
50, 3.141592653590, 0.000116109848
51, 3.141592653590, 0.000110387802
52, 3.141592653590, 0.000125646591
53, 3.141592653590, 0.000112771988
54, 3.141592653590, 0.000111341476
55, 3.141592653590, 0.000111103058
56, 3.141592653590, 0.000100374222
57, 3.141592653590, 0.000106096268
58, 3.141592653590, 0.000109672546
59, 3.141592653590, 0.000149965286
60, 3.141592653590, 0.000100135803
61, 3.141592653590, 0.000109195709
62, 3.141592653590, 0.000119686127
63, 3.141592653590, 0.000114202499
64, 3.141592653590, 0.000139713287
65, 3.141592653590, 0.000104427338
66, 3.141592653590, 0.000126361847
67, 3.141592653590, 0.000098228455
68, 3.141592653590, 0.000114202499
69, 3.141592653590, 0.000143289566
70, 3.141592653590, 0.000110149384
71, 3.141592653590, 0.000115394592
72, 3.141592653590, 0.000103712082
73, 3.141592653590, 0.000121593475
74, 3.141592653590, 0.000115871429
75, 3.141592653590, 0.000119209290
76, 3.141592653590, 0.000118017197
77, 3.141592653590, 0.000128746033
78, 3.141592653590, 0.000123977661
79, 3.141592653590, 0.000105381012
80, 3.141592653590, 0.000140190125
81, 3.141592653590, 0.000931024551
82, 3.141592653590, 0.000118970871
83, 3.141592653590, 0.000100135803
84, 3.141592653590, 0.000146389008
85, 3.141592653590, 0.000118017197
86, 3.141592653590, 0.000114440918
87, 3.141592653590, 0.000108718872
88, 3.141592653590, 0.000123739243
89, 3.141592653590, 0.000134944916
90, 3.141592653590, 0.000097751617
91, 3.141592653590, 0.000136375427
92, 3.141592653590, 0.000104188919
93, 3.141592653590, 0.000109910965
94, 3.141592653590, 0.000105857849
95, 3.141592653590, 0.000107288361
96, 3.141592653590, 0.000110626221
97, 3.141592653590, 0.000113487244
98, 3.141592653590, 0.000110387802
99, 3.141592653590, 0.000108003616
100, 3.141592653590, 0.000118970871
101, 3.141592653590, 0.000106811523
102, 3.141592653590, 0.000110864639
103, 3.141592653590, 0.000118017197
104, 3.141592653590, 0.000102043152
105, 3.141592653590, 0.000110864639
106, 3.141592653590, 0.000094413757
107, 3.141592653590, 0.000112056732
108, 3.141592653590, 0.000108480453
109, 3.141592653590, 0.000110149384
110, 3.141592653590, 0.000112056732
111, 3.141592653590, 0.000148534775
112, 3.141592653590, 0.000106096268
113, 3.141592653590, 0.000158071518
114, 3.141592653590, 0.000135421753
115, 3.141592653590, 0.000140190125
116, 3.141592653590, 0.000105381012
117, 3.141592653590, 0.000126361847
118, 3.141592653590, 0.000112533569
119, 3.141592653590, 0.000110387802
120, 3.141592653590, 0.000131607056
121, 3.141592653590, 0.000113487244
122, 3.141592653590, 0.000113248825
123, 3.141592653590, 0.000127553940
124, 3.141592653590, 0.000125169754
125, 3.141592653590, 0.000115156174
126, 3.141592653590, 0.000123500824
127, 3.141592653590, 0.000123262405
128, 3.141592653590, 0.000101327896
"""

inp = """
1, 3.141592653590, 0.001525402069
2, 3.141592653590, 0.000773191452
4, 3.141592653590, 0.000394105911
8, 3.141592653590, 0.000222444534
16, 3.141592653590, 0.000153779984
32, 3.141592653590, 0.000097036362
64, 3.141592653590, 0.000139713287
128, 3.141592653590, 0.000101327896
"""

inp = inp.strip().replace('\n', ',').strip()
inp = inp.split(',')

p = [int(x.strip()) for x in inp[::3]]
#p = np.log2(p)
t = [float(x.strip()) for x in inp[2::3]]
t = np.array(t) * 1e6
#t = [t[0] / x for x in t]

plt.plot(p, t, 'k--')
plt.scatter(p, t, c='k')
plt.grid()
plt.xlabel("Processor count")
plt.xscale("log", base=2)
#plt.ylabel("Speedup")
plt.ylabel("Run-time (us)")
plt.yscale("log", base=2)
plt.show()


plt.plot(p, t[0] / t, 'k--')
plt.scatter(p, t[0] / t, c='k')
plt.grid()
plt.xlabel("Processor count")
plt.xscale("log", base=2)
#plt.ylabel("Speedup")
plt.ylabel("Speedup")
plt.yscale("log", base=2)
plt.show()
